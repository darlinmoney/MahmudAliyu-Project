Create cluster.
create "cluster-1" --zone "us-central1-c" 
--no-enable-basic-auth --cluster-version "1.15.12-gke.2" 
--machine-type "e2-medium" --image-type "COS" 
--disk-type "pd-standard" --disk-size "100" 
--metadata disable-legacy-endpoints=true 
--scopes "https://www.googleapis.com/auth/devstorage.read_only","https://www.googleapis.com/auth/logging.write","https://www.googleapis.com/auth/monitoring","https://www.googleapis.com/auth/servicecontrol","https://www.googleapis.com/auth/service.management.readonly","https://www.googleapis.com/auth/trace.append" 
--num-nodes "3" --enable-stackdriver-kubernetes 
--enable-ip-alias --network  
--subnetwork PROJECT_ID/regions/us-central1/subnetworks/default" 
--default-max-pods-per-node "110" 
--no-enable-master-authorized-networks 
--addons HorizontalPodAutoscaling,HttpLoadBalancing 
--enable-autoupgrade --enable-autorepair --max-surge-upgrade 1 --max-unavailable-upgrade 0

When the cluster is ready, a green check appears, click Connect.
--gcloud container clusters get-credentials cluster-1 --zone us-central1-c --project qwiklabs-gcp-03-c70863c3aabf

To test your connection, enter the following command:
--kubectl get nodes

Create a Docker image and store it in Container Registry:
--cd ~/gcp-course/training-data-analyst/courses/design-process/deploying-apps-to-gcp
--gcloud builds submit --tag gcr.io/$DEVSHELL_PROJECT_ID/devops-image:v0.2 

Kubernetes command to deploy your application:
--kubectl apply -f kubernetes-config.yaml

A load balancer was also added in the configuration file. 
--kubectl get services
